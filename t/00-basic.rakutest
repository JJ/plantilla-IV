#!/usr/bin/env raku

use Test;
use IV::Stats;

my $stats = IV::Stats.new;

ok( $stats, "Can create object");
my @objetivos-cumplidos = $stats.objetivos-cumplidos();
if @objetivos-cumplidos[0].elems > 0 {
    my @max-estudiantes = @objetivos-cumplidos.max;
    my $max-objetivo = @objetivos-cumplidos.elems - 1;
    my $estudiante = @max-estudiantes[0][0];

    my $objetivos = $stats.objetivos-de($estudiante);
    cmp-ok($stats.objetivos-de($estudiante).elems,
            ">=",
            $max-objetivo, "Objetivos hechos");

    cmp-ok($stats.entregas-de($estudiante),
            ">=", $max-objetivo,
            "Entregas hechas");
    ok($estudiante ∈ $stats.cumple-objetivo($max-objetivo - 1),
    "Conjuntos creados");
    ok($estudiante ∈ $stats.hecha-entrega($max-objetivo), "Entregas hechas");
    ok($stats.bajas-objetivos(0), "Devuelve bajas objetivos");
    ok($stats.bajas-totales(0), "Devuelve bajas totales");
    cmp-ok($stats.objetivos.elems, ">=", 0, "Objetivos hasta ahora");
    cmp-ok($stats.estudiantes.elems, ">=", 10, "Estudiantes suficientes");

    my %percentiles = $stats.percentiles();
    for %percentiles.values -> $v {
        cmp-ok($v, ">", 0, "$v es mayor que 0")
    }
}

subtest {
    my %versiones = $stats.versiones();
    my $primer-estudiante = %versiones.keys()[0];
    cmp-ok( %versiones{$primer-estudiante}, ">=", v0.0.1);
} => "Version tests";

done-testing;
